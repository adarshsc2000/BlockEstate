type ActiveProperty @entity {
  id: ID!
  buyer: Bytes! # Address. 0x00000... if no one has bought yet
  seller: Bytes!
  nftAddress: Bytes!
  tokenId: BigInt!
  price: BigInt
}

type PropertyListed @entity(immutable: true) {
    id: ID!
    seller: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    price: BigInt! # uint256
    # blockNumber: BigInt!
    # blockTimestamp: BigInt!
    # transactionHash: Bytes!
}

type PropertyBought @entity(immutable: true) {
    id: ID!
    buyer: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    price: BigInt! # uint256
    # blockNumber: BigInt!
    # blockTimestamp: BigInt!
    # transactionHash: Bytes!
}

type PropertyCanceled @entity(immutable: true) {
    id: ID!
    seller: Bytes! # address
    nftAddress: Bytes! # address
    tokenId: BigInt! # uint256
    # blockNumber: BigInt!
    # blockTimestamp: BigInt!
    # transactionHash: Bytes!
}
type ContractPropertyCanceled @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PropertyInterested @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ContractPropertyListed @entity(immutable: true) {
  id: Bytes!
  seller: Bytes! # address
  tokenId: BigInt! # uint256
  price: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PropertyOwnershipTransfer @entity(immutable: true) {
  id: Bytes!
  oldTokenId: BigInt! # uint256
  newTokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PropertyTransaction @entity(immutable: true) {
  id: Bytes!
  buyer: Bytes! # address
  tokenId: BigInt! # uint256
  price: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PropertyVerified @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PropertyExpired @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PropertyMinted @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  owner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
